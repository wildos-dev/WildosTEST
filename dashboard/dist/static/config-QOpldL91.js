import{aK as a,aP as l,aQ as i,aR as r}from"./react-ecosystem-DA9e0y3F.js";import{H as o,b as n,I as s}from"./date-utils-hmeNWewA.js";import"./react-core-Bcdk_OeX.js";import"./monaco-D6sUsa5W.js";const m=()=>a.use(l).use(i).use(r).init({debug:!1,fallbackLng:"en",interpolation:{escapeValue:!1},load:"languageOnly",detection:{order:["localStorage","sessionStorage","cookie","navigator"],lookupLocalStorage:"i18nextLng",lookupSessionStorage:"i18nextLng",lookupCookie:"i18nextLng",caches:["localStorage","sessionStorage","cookie"]},backend:{loadPath:"/locales/{{lng}}.json",requestOptions:{cache:"no-cache"}},supportedLngs:["en","ru"],react:{useSuspense:!1},saveMissing:!1,updateMissing:!1,nonExplicitSupportedLngs:!1}).then(()=>{const e=a.language==="ru"?o:n;s({locale:e}),document.documentElement.lang=a.language}).catch(e=>{}),f=()=>{a.on("languageChanged",e=>{s({locale:e==="ru"?o:n}),document.documentElement.lang=e,localStorage.setItem("i18nextLng",e),sessionStorage.setItem("i18nextLng",e),a.hasResourceBundle(e,"translation")||a.reloadResources(e).then(()=>{})}),a.on("failedLoading",(e,t,c)=>{}),a.on("loaded",e=>{})};export{a as default,m as initializeI18nCore,f as setupLanguageHandler};
